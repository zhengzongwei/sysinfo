name: Release on Tag

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.21

      - name: Build binaries
        run: make

      - name: Get Tag Name
        id: get_tag
        run: echo ::set-output name=TAG_NAME::${GITHUB_REF/refs\/tags\//}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_tag.outputs.TAG_NAME }}
          release_name: Release ${{ steps.get_tag.outputs.TAG_NAME }}
          body: Release notes for ${{ steps.get_tag.outputs.TAG_NAME }}
          draft: false
          prerelease: false
          commitish: ${{ github.sha }}
          owner: ${{ github.repository_owner }}
          repo: ${{ github.event.repository.name }}

      - name: Upload Release Asset (Mac amd64)
        id: upload-release-app-darwin-amd64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/darwin/app_darwin_amd64
          asset_name: app_darwin_amd64_${{ steps.get_tag.outputs.TAG_NAME }}
          asset_content_type: application/octet-stream

      - name: Upload Release Asset (Mac arm64)
        id: upload-release-app-darwin-arm64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/darwin/app_darwin_arm64
          asset_name: app_darwin_arm64_${{ steps.get_tag.outputs.TAG_NAME }}
          asset_content_type: application/octet-stream

      - name: Upload Release Asset (Linux amd64)
        id: upload-release-app-linux-amd64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/linux/app_linux_amd64
          asset_name: app_linux_amd64_${{ steps.get_tag.outputs.TAG_NAME }}
          asset_content_type: application/octet-stream

      - name: Upload Release Asset (Linux arm64)
        id: upload-release-app-linux-arm64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/linux/app_linux_arm64
          asset_name: app_linux_arm64_${{ steps.get_tag.outputs.TAG_NAME }}
          asset_content_type: application/octet-stream

      - name: Upload Release Asset (Windows amd64)
        id: upload-release-app-windows-amd64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/windows/app_windows_amd64.exe
          asset_name: app_windows_amd64_${{ steps.get_tag.outputs.TAG_NAME }}.exe
          asset_content_type: application/octet-stream

      - name: Upload Release Asset (Windows arm64)
        id: upload-release-app-windows-arm64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/windows/app_windows_arm64.exe
          asset_name: app_windows_arm64_${{ steps.get_tag.outputs.TAG_NAME }}.exe
          asset_content_type: application/octet-stream

      - name: Upload Release Asset (Windows 386)
        id: upload-release-app-windows-386
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/windows/app_windows_386.exe
          asset_name: app_windows_386_${{ steps.get_tag.outputs.TAG_NAME }}.exe
          asset_content_type: application/octet-stream

